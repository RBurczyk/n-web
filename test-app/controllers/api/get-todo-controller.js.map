{"version":3,"file":"get-todo-controller.js","sourceRoot":"","sources":["get-todo-controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6CAAoC;AAEpC,gDAAyE;AACzE,sCAAsC;AACtC,0FAAoF;AAEpF,mCAAgC;AAKhC,IAAa,iBAAiB,GAA9B,uBAA+B,SAAQ,kBAAU;IAM7C,YAAmB,WAAwB,EAAE,aAA4B;QAErE,mBAAK,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,cAAc,EAAE,CAAC;QACnD,mBAAK,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC,cAAc,EAAE,CAAC;QACvD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACxC,CAAC;IAGY,OAAO,CAAC,EAAU;;YAE3B,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC/C,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;gBACb,MAAM,IAAI,gDAAqB,CAAC,EAAE,CAAC,CAAC;YAExC,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;YACrD,MAAM,CAAC;gBACH,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,KAAK,EAAE;oBACH,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC;oBAChE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC;oBACrE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC;iBACxE;aACJ,CAAC;QACN,CAAC;KAAA;CACJ,CAAA;AAnCY,iBAAiB;IAH7B,aAAK;IACL,aAAK,CAAC,MAAM,CAAC,OAAO,CAAC;IACrB,eAAM,CAAC,aAAa,EAAE,eAAe,CAAC;;GAC1B,iBAAiB,CAmC7B;AAnCY,8CAAiB","sourcesContent":["import { given } from \"n-defensive\";\nimport { TodoManager } from \"./../../services/todo-manager/todo-manager\";\nimport { query, httpGet, route, Controller } from \"./../../../src/index\";\nimport * as Routes from \"./../routes\";\nimport { TodoNotFoundException } from \"./../../exceptions/todo-not-found-exception\";\nimport { ConfigService } from \"./../../services/config-service/config-service\";\nimport { inject } from \"n-ject\";\n\n@query\n@route(Routes.getTodo)  \n@inject(\"TodoManager\", \"ConfigService\")    \nexport class GetTodoController extends Controller\n{\n    private readonly _todoManager: TodoManager;\n    private readonly _configService: ConfigService;\n    \n    \n    public constructor(todoManager: TodoManager, configService: ConfigService)\n    {\n        given(todoManager, \"todoManager\").ensureHasValue();\n        given(configService, \"configService\").ensureHasValue();\n        super();\n        this._todoManager = todoManager;\n        this._configService = configService;\n    }\n    \n    \n    public async execute(id: number): Promise<any>\n    {\n        let todos = await this._todoManager.getTodos();\n        let todo = todos.find(t => t.id === id);\n        if (todo == null)\n            throw new TodoNotFoundException(id);\n        \n        let baseUrl = await this._configService.getBaseUrl();\n        return {\n            id: todo.id,\n            title: todo.title,\n            description: todo.description,\n            links: {\n                self: this.generateUrl(Routes.getTodo, { id: todo.id }, baseUrl),\n                update: this.generateUrl(Routes.updateTodo, { id: todo.id }, baseUrl),\n                delete: this.generateUrl(Routes.deleteTodo, { id: todo.id }, baseUrl)\n            }\n        };\n    }\n}"]}