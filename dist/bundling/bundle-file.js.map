{"version":3,"file":"bundle-file.js","sourceRoot":"","sources":["../../src/bundling/bundle-file.ts"],"names":[],"mappings":";;AAAA,6CAAoC;AACpC,yBAAyB;AACzB,6BAA6B;AAC7B,6CAAgD;AAEhD;IAMI,IAAW,IAAI,KAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChD,IAAW,OAAO,KAAa,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAGtD,YAAmB,IAAY;QAE3B,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAE3E,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAGjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACtB,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;QAEtB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACzB,MAAM,IAAI,+BAAiB,CAAC,SAAS,QAAQ,GAAG,EAAE,gBAAgB,CAAC,CAAC;QAExE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACtD,CAAC;CACJ;AA/BD,gCA+BC","sourcesContent":["import { given } from \"n-defensive\";\nimport * as Fs from \"fs\";\nimport * as Path from \"path\";\nimport { ArgumentException } from \"n-exception\";\n\nexport class BundleFile\n{\n    private readonly _path: string;\n    private readonly _content: string;\n    \n    \n    public get path(): string { return this._path; }\n    public get content(): string { return this._content; }\n    \n    \n    public constructor(path: string)\n    {\n        given(path, \"path\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n\n        path = path.trim();\n        let cwd = process.cwd();\n        if (path.startsWith(cwd))\n            path = path.replace(cwd, \"\");    \n        \n        \n        if (!path.startsWith(\"/\"))\n            path = \"/\" + path;\n        \n        let fullPath = Path.join(process.cwd(), path);\n\n        if (!Fs.existsSync(fullPath))\n            throw new ArgumentException(`path [${fullPath}]`, \"does not exist\");\n        \n        this._path = path;\n        this._content = Fs.readFileSync(fullPath, \"utf8\");\n    }\n}"]}