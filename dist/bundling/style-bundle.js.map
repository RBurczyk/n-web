{"version":3,"file":"style-bundle.js","sourceRoot":"","sources":["../../src/bundling/style-bundle.ts"],"names":[],"mappings":";;AAAA,mDAA+C;AAI/C,SAAS;AACT,iBAAyB,SAAQ,4BAAY;IAE/B,YAAY;QAElB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,MAAM,GAAG,gDAAgD,SAAS,IAAI,CAAC;QAC3E,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAI/B,uCAAuC;QACvC,4DAA4D;QAE5D,mBAAmB;QAEnB,kBAAkB;QAClB,IAAI;QACJ,8BAA8B;QAC9B,+FAA+F;QAC/F,IAAI;QACJ,OAAO;QACP,IAAI;QACJ,8BAA8B;QAC9B,kCAAkC;QAElC,2CAA2C;QAC3C,QAAQ;QAER,iBAAiB;IACrB,CAAC;CACJ;AA9BD,kCA8BC","sourcesContent":["import { ServedBundle } from \"./served-bundle\";\nimport { BundleFile } from \"./bundle-file\";\n\n\n// public\nexport class StyleBundle extends ServedBundle\n{\n    protected renderBundle(): Promise<string>\n    {\n        let bundleUrl = this.createBundle(\".css\");\n        let result = `<link rel=\"stylesheet\" type=\"text/css\" href=\"${bundleUrl}\">`;\n        return Promise.resolve(result);\n        \n        \n        \n        // let files = new Array<BundleFile>();\n        // this.entries.forEach(t => files.push(...t.read(\".css\")));\n        \n        // let result = \"\";\n        \n        // if (this.isDev)\n        // {\n        //     for (let item of files)\n        //         result += `<link rel = \"stylesheet\" type = \"text/css\" href = \"${item.path}\" />`;    \n        // }\n        // else\n        // {\n        //     for (let item of files)\n        //         result += item.content;\n            \n        //     result = `<style>${result}</style>`;\n        // }    \n        \n        // return result;\n    }\n}"]}