{"version":3,"file":"template-bundle.js","sourceRoot":"","sources":["../../src/bundling/template-bundle.ts"],"names":[],"mappings":";;AAAA,qCAAkC;AAKlC,SAAS;AACT,oBAA4B,SAAQ,eAAM;IAE5B,YAAY;QAElB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,CACvB,CAAC;YACG,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9B,IAAI,QAAQ,GAAG,sCAAsC,EAAE,KAAK,WAAW,WAAW,CAAC;YACnF,MAAM,IAAI,QAAQ,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;CACJ;AAfD,wCAeC","sourcesContent":["import { Bundle } from \"./bundle\";\nimport { BundleFile } from \"./bundle-file\";\nimport * as Path from \"path\";\n\n\n// public\nexport class TemplateBundle extends Bundle\n{\n    protected renderBundle(): string\n    {\n        let files = this.getFiles(\".html\");\n        let result = \"\";\n        for (let item of files)\n        {\n            let id = item.name.replace(\".html\", \"\").split(\"-\").join(\"\");\n            let fileContent = item.read();\n            let template = `<script type=\"text/x-template\" id=\"${id}\">${fileContent}</script>`;\n            result += template;\n        }\n        return result;\n    }\n}"]}