{"version":3,"file":"view.js","sourceRoot":"","sources":["../src/view.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,6CAAoC;AACpC,iBAAe;AAGF,QAAA,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAE5C,SAAS;AACT,cAAqB,IAAY;IAE7B,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC;SACd,cAAc,EAAE;SAChB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC;SACrC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,kBAAkB,CAAC,CAAC;IAEjE,MAAM,CAAC,CAAC,MAAgB,KAAK,OAAO,CAAC,cAAc,CAAC,kBAAU,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;AACzF,CAAC;AARD,oBAQC","sourcesContent":["import \"reflect-metadata\";\nimport { given } from \"n-defensive\";\nimport \"n-ext\";\n\n\nexport const viewSymbol = Symbol(\"webView\");\n\n// public\nexport function view(file: string): Function\n{\n    given(file, \"file\")\n        .ensureHasValue()\n        .ensure(t => !t.isEmptyOrWhiteSpace())\n        .ensure(t => t.trim().endsWith(\".html\"), \"not a .html file\");\n\n    return (target: Function) => Reflect.defineMetadata(viewSymbol, file.trim(), target);\n}\n\n"]}