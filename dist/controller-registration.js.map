{"version":3,"file":"controller-registration.js","sourceRoot":"","sources":["../src/controller-registration.ts"],"names":[],"mappings":"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","sourcesContent":["import \"reflect-metadata\";\nimport { given } from \"n-defensive\";\nimport { ApplicationException, ArgumentException } from \"n-exception\";\nimport { httpMethodSymbol } from \"./http-method\";\nimport { httpRouteSymbol } from \"./route\";\nimport { RouteInfo } from \"./route-info\";\nimport { viewSymbol } from \"./view\";\nimport { viewLayoutSymbol } from \"./view-layout\";\nimport \"n-ext\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport { ConfigurationManager } from \"n-config\";\n\n\nexport class ControllerRegistration\n{\n    private readonly _name: string;\n    private readonly _controller: Function;\n    private _method: string;\n    private _route: RouteInfo;\n    private _viewFileName: string = null;\n    private _viewFilePath: string = null;\n    private _viewFileData: string = null;\n    private _viewLayoutFileName: string = null;\n    private _viewLayoutFilePath: string = null;\n    private _viewLayoutFileData: string = null;\n\n\n    public get name(): string { return this._name; }\n    public get controller(): Function { return this._controller; }\n    public get method(): string { return this._method; }\n    public get route(): RouteInfo { return this._route; }\n    public get view(): string { return this.retrieveView(); }\n    public get viewLayout(): string { return this.retrieveViewLayout(); }\n\n\n    public constructor(controller: Function)\n    {\n        given(controller, \"controller\").ensureHasValue();\n\n        this._name = (<Object>controller).getTypeName();\n        this._controller = controller;\n    }\n    \n    \n    public complete(viewResolutionRoot: string): void\n    {\n        viewResolutionRoot = viewResolutionRoot ? path.join(process.cwd(), viewResolutionRoot) : process.cwd();\n        \n        if (!Reflect.hasOwnMetadata(httpMethodSymbol, this._controller))\n            throw new ApplicationException(\"Controller '{0}' does not have http method applied.\"\n                .format(this._name));\n\n        if (!Reflect.hasOwnMetadata(httpRouteSymbol, this._controller))\n            throw new ApplicationException(\"Controller '{0}' does not have http route applied.\"\n                .format(this._name));\n\n        this._method = Reflect.getOwnMetadata(httpMethodSymbol, this._controller);\n        this._route = new RouteInfo(Reflect.getOwnMetadata(httpRouteSymbol, this._controller));\n\n        if (Reflect.hasOwnMetadata(viewSymbol, this._controller))\n        {\n            let viewFileName = Reflect.getOwnMetadata(viewSymbol, this._controller);\n            let viewFilePath = this.resolvePath(viewResolutionRoot, viewFileName);\n            if (viewFilePath === null)\n                throw new ArgumentException(\"viewFile[{0}]\".format(viewFileName), \"was not found\");\n\n            this._viewFileName = viewFileName;\n            this._viewFilePath = viewFilePath;\n            if (!this.isDev())\n                this._viewFileData = fs.readFileSync(this._viewFilePath, \"utf8\");\n\n            if (Reflect.hasOwnMetadata(viewLayoutSymbol, this._controller))\n            {\n                let viewLayoutFileName = Reflect.getOwnMetadata(viewLayoutSymbol, this._controller);\n                let viewLayoutFilePath = this.resolvePath(viewResolutionRoot, viewLayoutFileName);\n                if (viewLayoutFilePath === null)\n                    throw new ArgumentException(\"viewLayoutFile[{0}]\".format(viewLayoutFileName), \"was not found\");\n\n                this._viewLayoutFileName = viewLayoutFileName;\n                this._viewLayoutFilePath = viewLayoutFilePath;\n                if (!this.isDev())\n                    this._viewLayoutFileData = fs.readFileSync(this._viewLayoutFilePath, \"utf8\");\n            }\n        }\n    }\n    \n    private resolvePath(startPoint: string, fileName: string): string\n    {\n        if (startPoint.endsWith(fileName))\n            return startPoint;\n        \n        if (fs.statSync(startPoint).isDirectory())\n        {\n            let files = fs.readdirSync(startPoint);\n            for (let file of files)\n            {\n                if (file.startsWith(\".\") || file.startsWith(\"node_modules\"))\n                    continue;\n                \n                let resolvedPath = this.resolvePath(path.join(startPoint, file), fileName);\n                if (resolvedPath != null)\n                    return resolvedPath;\n            }\n        }    \n        \n        return null;\n    }\n       \n    private retrieveView(): string\n    {\n        if (this._viewFilePath === null)\n            return null;\n        \n        if (this.isDev())\n            return fs.readFileSync(this._viewFilePath, \"utf8\");\n        \n        return this._viewFileData;\n    }\n    \n    private retrieveViewLayout(): string\n    {\n        if (this._viewLayoutFilePath === null)\n            return null;    \n        \n        if (this.isDev())\n            return fs.readFileSync(this._viewLayoutFilePath, \"utf8\");\n\n        return this._viewLayoutFileData;\n    }\n    \n    private isDev(): boolean\n    {\n        let mode = ConfigurationManager.getConfig<string>(\"mode\");\n        return mode !== null && mode.trim().toLowerCase() === \"dev\"; \n    }\n}"]}