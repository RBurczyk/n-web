{"version":3,"file":"default-call-context.js","sourceRoot":"","sources":["../../../src/services/call-context/default-call-context.ts"],"names":[],"mappings":";;AAEA,6CAAoC;AAKpC;IAAA;QAGY,aAAQ,GAAY,KAAK,CAAC;IAgDtC,CAAC;IA3CG,IAAW,eAAe,KAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACrE,IAAW,OAAO,KAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvD,IAAW,UAAU,KAAa,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5D,IAAW,SAAS,KAAa,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1D,IAAW,eAAe,KAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;IACvG,IAAW,QAAQ,KAAqB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAGnE,SAAS,CAAC,GAAgB;QAE7B,mBAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC;QAEnC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAClC,CAAC;IAGO,sBAAsB;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CACvD,CAAC;YACG,IAAI,aAAa,GAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YAC3D,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,CACzC,CAAC;gBACG,aAAa,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC;gBACrC,OAAO,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;oBAC/B,aAAa,GAAG,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAExD,IAAI,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAC1B,CAAC;oBACG,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;oBAC9C,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC/B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC,CAClE,CAAC;wBACG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACrB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;wBAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBAC5B,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;CACJ;AAnDD,gDAmDC","sourcesContent":["import { CallContext } from \"./call-context\";\nimport { Scope } from \"n-ject\";\nimport { given } from \"n-defensive\";\nimport * as Koa from \"koa\";\nimport { ClaimsIdentity } from \"n-sec\";\n\n\nexport class DefaultCallContext implements CallContext\n{\n    private _ctx: Koa.Context;\n    private _hasAuth: boolean = false;\n    private _authScheme: string;\n    private _authToken: string;\n    \n    \n    public get dependencyScope(): Scope { return this._ctx.state.scope; }\n    public get hasAuth(): boolean { return this._hasAuth; }\n    public get authScheme(): string { return this._authScheme; }\n    public get authToken(): string { return this._authToken; }\n    public get isAuthenticated(): boolean { return this.identity !== undefined && this.identity !== null; }\n    public get identity(): ClaimsIdentity { return this._ctx.state.identity; }\n    \n    \n    public configure(ctx: Koa.Context): void\n    {\n        given(ctx, \"ctx\").ensureHasValue();\n        \n        this._ctx = ctx;\n        this.populateSchemeAndToken();\n    }\n    \n    \n    private populateSchemeAndToken(): void\n    {\n        if (this._ctx.header && this._ctx.header.authorization)\n        {\n            let authorization: string = this._ctx.header.authorization;\n            if (!authorization.isEmptyOrWhiteSpace())\n            {\n                authorization = authorization.trim();\n                while (authorization.contains(\"  \")) // double space\n                    authorization = authorization.replaceAll(\"  \", \" \");    \n                \n                let splitted = authorization.split(\" \");\n                if (splitted.length === 2)\n                {\n                    let scheme = splitted[0].trim().toLowerCase();\n                    let token = splitted[1].trim();\n                    if (!scheme.isEmptyOrWhiteSpace() && !token.isEmptyOrWhiteSpace())\n                    {\n                        this._hasAuth = true;\n                        this._authScheme = scheme;\n                        this._authToken = token;\n                    }\n                }\n            }\n        } \n    }\n}"]}