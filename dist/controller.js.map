{"version":3,"file":"controller.js","sourceRoot":"","sources":["../src/controller.ts"],"names":[],"mappings":";;AAAA,iBAAe;AACf,6CAAoC;AAGpC,kFAA6E;AAE7E,SAAS;AACT;IAKI,kFAAkF;IAClF,IAAI;IACJ,wDAAwD;IACxD,IAAI;IAEM,QAAQ,CAAC,GAAW;QAE1B,mBAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACzE,MAAM,IAAI,+CAAqB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAChD,CAAC;CACJ;AAfD,gCAeC","sourcesContent":["import \"n-ext\";\nimport { given } from \"n-defensive\";\nimport { RouteInfo } from \"./route-info\";\nimport { Utils } from \"./utils\";\nimport { HttpRedirectException } from \"./exceptions/http-redirect-exception\";\n\n// public\nexport abstract class Controller\n{\n    public abstract execute(...params: any[]): Promise<any>;\n    \n    \n    // protected generateUrl(route: string, params?: object, baseUrl?: string): string\n    // {\n    //     return Utils.generateUrl(route, params, baseUrl);\n    // }\n    \n    protected redirect(url: string): void\n    {\n        given(url, \"url\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        throw new HttpRedirectException(url.trim());\n    }\n}"]}