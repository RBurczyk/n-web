{"version":3,"file":"web-app.js","sourceRoot":"","sources":["../src/web-app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Koa from \"koa\";\nimport * as KoaBodyParser from \"koa-bodyparser\";\nimport { Container, ComponentInstaller, Scope } from \"@nivinjoseph/n-ject\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { Router } from \"./router\";\nimport { Exception, ArgumentException, InvalidOperationException } from \"@nivinjoseph/n-exception\";\nimport * as serve from \"koa-static\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport \"@nivinjoseph/n-ext\";\nimport * as cors from \"kcors\";\nimport { DefaultCallContext } from \"./services/call-context/default-call-context\";\nimport { AuthenticationHandler } from \"./security/authentication-handler\";\nimport { CallContext } from \"./services/call-context/call-context\";\nimport { DefaultAuthorizationHandler } from \"./security/default-authorization-handler\";\nimport { ClaimsIdentity } from \"@nivinjoseph/n-sec\";\nimport { DefaultExceptionHandler } from \"./exceptions/default-exception-handler\";\nimport { HttpException } from \"./exceptions/http-exception\";\nimport { ExceptionHandler } from \"./exceptions/exception-handler\";\nimport { ConfigurationManager } from \"@nivinjoseph/n-config\";\nimport * as webPackMiddleware from \"koa-webpack\";\nimport { ConsoleLogger } from \"@nivinjoseph/n-log\";\n\n\n// public\nexport class WebApp\n{\n    private readonly _port: number;\n    private readonly _koa: Koa;\n    private readonly _container: Container;\n    private readonly _router: Router;\n    \n    private readonly _callContextKey = \"CallContext\";\n    \n    private readonly _exceptionHandlerKey = \"$exceptionHandler\";\n    private _hasExceptionHandler = false;\n    \n    private readonly _authenticationHandlerKey = \"$authenticationHandler\";\n    private _hasAuthenticationHandler = false;\n    \n    private readonly _authorizationHandlerKey = \"$authorizationHandler\";\n    private _hasAuthorizationHandler = false;\n    \n    \n    private readonly _staticFilePaths = new Array<string>();\n    private _enableCors = false;\n    private _viewResolutionRoot: string;\n    private _isBootstrapped: boolean = false;\n    \n    \n    public constructor(port: number)\n    {\n        given(port, \"port\").ensureHasValue();\n        this._port = port;\n        this._koa = new Koa();\n        this._container = new Container();\n        this._router = new Router(this._koa, this._container, this._authorizationHandlerKey, this._callContextKey);\n    }\n    \n    \n    public enableCors(): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"enableCors\");\n        \n        this._enableCors = true;\n        return this;\n    }\n    \n    public registerStaticFilePaths(...filePaths: string[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerStaticFilePaths\");\n        \n        for (let filePath of filePaths)\n        {\n            filePath = filePath.trim().toLowerCase();\n            if (filePath.startsWith(\"/\"))\n            {\n                if (filePath.length === 1)\n                {\n                    throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"is root\");\n                }    \n                filePath = filePath.substr(1);\n            }\n            \n            filePath = path.join(process.cwd(), filePath);\n            \n            // We skip the defensive check in dev because of webpack HMR because \n            if (ConfigurationManager.getConfig<string>(\"env\") !== \"dev\")\n            {\n                if (!fs.existsSync(filePath))\n                    throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"does not exist\");\n            }                \n            \n            if (this._staticFilePaths.some(t => t === filePath))\n                throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"is duplicate\");\n            \n            this._staticFilePaths.push(filePath);\n        }    \n        return this;\n    }\n    \n    public registerControllers(...controllerClasses: Function[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerControllers\");\n        \n        this._router.registerControllers(...controllerClasses);\n        return this;\n    }\n    \n    public useInstaller(installer: ComponentInstaller): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerInstaller\");\n        \n        given(installer, \"installer\").ensureHasValue();\n        this._container.install(installer);\n        return this;\n    }\n    \n    public registerExceptionHandler(exceptionHandlerClass: Function): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerExceptionHandler\");\n        \n        given(exceptionHandlerClass, \"exceptionHandlerClass\").ensureHasValue();\n        this._container.registerScoped(this._exceptionHandlerKey, exceptionHandlerClass);\n        this._hasExceptionHandler = true;\n        return this;\n    }\n    \n    public registerAuthenticationHandler(authenticationHandler: Function): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerAuthenticationHandler\");\n        \n        given(authenticationHandler, \"authenticationHandler\").ensureHasValue();\n        this._container.registerScoped(this._authenticationHandlerKey, authenticationHandler);\n        this._hasAuthenticationHandler = true;\n        return this;\n    }\n    \n    public registerAuthorizationHandler(authorizationHandler: Function): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerAuthorizationHandler\");\n        \n        given(authorizationHandler, \"authorizationHandler\").ensureHasValue();\n        this._container.registerScoped(this._authorizationHandlerKey, authorizationHandler);\n        this._hasAuthorizationHandler = true;\n        return this;\n    }\n    \n    public useViewResolutionRoot(path: string): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"useViewResolutionRoot\");\n        \n        given(path, \"path\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        this._viewResolutionRoot = path.trim();\n        return this;\n    }\n    \n    public enableWebPackDevMiddleware(makeItHot: boolean = false, publicPath: string = \"/\"): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"enableWebPackDevMiddleware\");\n        \n        if (ConfigurationManager.getConfig<string>(\"env\") === \"dev\")\n            this._koa.use(webPackMiddleware(\n                {\n                    dev: { publicPath },\n                    hot: <any>{ reload: true, hot: makeItHot }\n                }\n            ));\n        \n        return this;\n    }\n    \n    public bootstrap(): void\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"bootstrap\");\n        \n        this.configureCors();\n        this.configureContainer();\n        this.configureScoping();\n        this.configureCallContext();\n        this.configureExceptionHandling();\n        this.configureErrorTrapping();\n        this.configureAuthentication();\n        this.configureStaticFileServing();\n        this.configureBodyParser();\n        this.configureRouting(); // must be last\n        \n        this._koa.listen(this._port);\n        this._isBootstrapped = true;\n    }\n    \n    \n    private configureCors(): void\n    {\n        if (this._enableCors)\n            this._koa.use(cors());    \n    }\n    \n    private configureContainer(): void\n    { \n        this._container.registerScoped(this._callContextKey, DefaultCallContext);\n        \n        if (!this._hasAuthorizationHandler)\n            this._container.registerScoped(this._authorizationHandlerKey, DefaultAuthorizationHandler);\n        \n        if (!this._hasExceptionHandler)\n            this._container.registerInstance(this._exceptionHandlerKey, new DefaultExceptionHandler(new ConsoleLogger()));    \n        \n        this._container.bootstrap();\n    }\n    \n    private configureScoping(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            ctx.state.scope = this._container.createScope();\n            await next();\n        });\n    }\n    \n    private configureCallContext(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            let scope: Scope = ctx.state.scope;\n            let defaultCallContext = scope.resolve<DefaultCallContext>(this._callContextKey);\n            defaultCallContext.configure(ctx);\n            await next();\n        });\n    }\n    \n    private configureExceptionHandling(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            try \n            {\n                await next();\n            }\n            catch (error)\n            {   \n                if (error instanceof HttpException)\n                {  \n                    ctx.status = error.statusCode;\n                    if (error.body !== undefined && error.body !== null)\n                        ctx.body = error.body;\n                    \n                    return;\n                }\n                    \n                let scope = ctx.state.scope as Scope;\n                let exceptionHandler = scope.resolve<ExceptionHandler>(this._exceptionHandlerKey);\n                \n                try \n                {\n                    const result = await exceptionHandler.handle(error);\n                    ctx.body = result;\n                }\n                catch (exp)\n                {\n                    if (exp instanceof HttpException)\n                    {\n                        const httpExp: HttpException = exp as HttpException;\n                        ctx.status = httpExp.statusCode;\n                        if (httpExp.body !== undefined && httpExp.body !== null)\n                            ctx.body = httpExp.body;\n                    }   \n                    else\n                    {\n                        let logMessage = \"\";\n                        if (exp instanceof Exception)\n                            logMessage = exp.toString();\n                        else if (exp instanceof Error)\n                            logMessage = exp.stack;\n                        else\n                            logMessage = exp.toString();\n\n                        console.log(Date.now(), logMessage);\n                        \n                        ctx.status = 500;\n                        ctx.body = \"There was an error processing your request.\";\n                    }    \n                }\n            }\n        });\n    }\n    \n    private configureErrorTrapping(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            try \n            {\n                await next();\n            }\n            catch (error)\n            {\n                if (error instanceof Error)\n                    throw error;    \n                \n                throw new Exception(\"TRAPPED ERROR | \" + error.toString());\n            }\n        });\n    }\n    \n    private configureAuthentication(): void\n    {\n        if (!this._hasAuthenticationHandler)\n            return;\n        \n        this._koa.use(async (ctx, next) =>\n        {\n            let scope = ctx.state.scope as Scope;\n            let callContext = scope.resolve<CallContext>(this._callContextKey);\n            if (callContext.hasAuth)\n            {\n                let authenticationHandler = scope.resolve<AuthenticationHandler>(this._authenticationHandlerKey);\n                let identity = await authenticationHandler.authenticate(callContext.authScheme, callContext.authToken);\n                if (identity && identity instanceof ClaimsIdentity)\n                    ctx.state.identity = identity;  \n            }    \n            \n            await next();\n        });\n    }\n    \n    private configureStaticFileServing(): void\n    {\n        for (let path of this._staticFilePaths)\n            this._koa.use(serve(path));\n    }\n    \n    private configureBodyParser(): void\n    {\n        this._koa.use(KoaBodyParser({\n            strict: true,\n            jsonLimit: \"250mb\"\n        }));\n    }\n    \n    private configureRouting(): void\n    {\n        this._router.configureRouting(this._viewResolutionRoot);\n    }\n}"]}