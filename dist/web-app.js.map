{"version":3,"file":"web-app.js","sourceRoot":"","sources":["../src/web-app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Koa from \"koa\";\nimport * as KoaBodyParser from \"koa-bodyparser\";\nimport { Container, ComponentInstaller, Scope } from \"n-ject\";\nimport { given } from \"n-defensive\";\nimport { Router } from \"./router\";\nimport { Exception, ArgumentException, InvalidOperationException } from \"n-exception\";\nimport { ExceptionHandler } from \"./exception-handler\";\nimport { HttpException } from \"./http-exception\";\nimport * as serve from \"koa-static\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport \"n-ext\";\nimport * as cors from \"kcors\";\nimport { ConfigurationManager } from \"n-config\";\n\n\n// public\nexport class WebApp\n{\n    private readonly _port: number;\n    private readonly _koa: Koa;\n    private readonly _container: Container;\n    private readonly _router: Router;\n    private readonly _exceptionHandlerKey = \"$exceptionHandler\";\n    private _hasExceptionHandler = false;\n    private readonly _staticFilePaths = new Array<string>();\n    private _enableCors = false;\n    private _viewResolutionRoot: string;\n    private _isBootstrapped: boolean = false;\n    \n    \n    public constructor(port: number)\n    {\n        given(port, \"port\").ensureHasValue();\n        this._port = port;\n        this._koa = new Koa();\n        this._container = new Container();\n        this._router = new Router(this._koa, this._container);\n    }\n    \n    \n    public enableCors(): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"enableCors\");\n        \n        this._enableCors = true;\n        return this;\n    }\n    \n    public registerStaticFilePaths(...filePaths: string[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerStaticFilePaths\");\n        \n        for (let filePath of filePaths)\n        {\n            filePath = filePath.trim().toLowerCase();\n            if (filePath.startsWith(\"/\"))\n            {\n                if (filePath.length === 1)\n                {\n                    if (ConfigurationManager.getConfig<string>(\"mode\") !== \"dev\")\n                        throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"is root\");\n                }    \n                filePath = filePath.substr(1);\n            }\n            \n            filePath = path.join(process.cwd(), filePath);\n            if (!fs.existsSync(filePath))\n                throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"does not exist\");    \n            \n            if (this._staticFilePaths.some(t => t === filePath))\n                throw new ArgumentException(\"filePath[{0}]\".format(filePath), \"is duplicate\");\n            \n            this._staticFilePaths.push(filePath);\n        }    \n        return this;\n    }\n    \n    public registerControllers(...controllerClasses: Function[]): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerControllers\");\n        \n        this._router.registerControllers(...controllerClasses);\n        return this;\n    }\n    \n    public useInstaller(installer: ComponentInstaller): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerInstaller\");\n        \n        given(installer, \"installer\").ensureHasValue();\n        this._container.install(installer);\n        return this;\n    }\n    \n    public registerExceptionHandler(exceptionHandlerClass: Function): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"registerExceptionHandler\");\n        \n        given(exceptionHandlerClass, \"exceptionHandlerClass\").ensureHasValue();\n        this._container.registerScoped(this._exceptionHandlerKey, exceptionHandlerClass);\n        this._hasExceptionHandler = true;\n        return this;\n    }\n    \n    public useViewResolutionRoot(path: string): this\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"useViewResolutionRoot\");\n        \n        given(path, \"path\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n        this._viewResolutionRoot = path.trim();\n        return this;\n    }\n    \n    public bootstrap(): void\n    {\n        if (this._isBootstrapped)\n            throw new InvalidOperationException(\"bootstrap\");\n        \n        this.configureCors();\n        this.configureContainer();\n        this.configureScoping();\n        this.configureHttpExceptionHandling();\n        this.configureExceptionHandling();\n        this.configureErrorTrapping();\n        this.configureStaticFileServing();\n        // this.configureAuthentication();\n        // this.configureAuthorization();\n        this.configureBodyParser();\n        this.configureRouting(); // must be last\n        \n        this._koa.listen(this._port);\n        this._isBootstrapped = true;\n    }\n    \n    \n    private configureCors(): void\n    {\n        if (this._enableCors)\n            this._koa.use(cors());    \n    }\n    \n    private configureContainer(): void\n    { \n        this._container.bootstrap();\n    }\n    \n    private configureScoping(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            ctx.state.scope = this._container.createScope();\n            await next();\n        });\n    }\n    \n    private configureHttpExceptionHandling(): void\n    {\n        this._koa.use(async (ctx, next) => \n        {\n            try \n            {\n                await next();\n            } \n            catch (error) \n            {\n                if (!(error instanceof HttpException))\n                    throw error;   \n                \n                let exp = error as HttpException;\n                ctx.status = exp.statusCode;\n                if (exp.body !== undefined && exp.body !== null)\n                    ctx.body = exp.body;\n            }\n        });\n    }\n    \n    private configureExceptionHandling(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            try \n            {\n                await next();\n            }\n            catch (error)\n            {\n                if (!this._hasExceptionHandler)\n                    throw error;\n                \n                if (error instanceof HttpException)\n                    throw error;   \n                    \n                let scope = ctx.state.scope as Scope;\n                let exceptionHandler = scope.resolve<ExceptionHandler>(this._exceptionHandlerKey);\n                ctx.body = await exceptionHandler.handle(error);\n            }\n        });\n    }\n    \n    private configureErrorTrapping(): void\n    {\n        this._koa.use(async (ctx, next) =>\n        {\n            try \n            {\n                await next();\n            }\n            catch (error)\n            {\n                if (error instanceof Error)\n                    throw error;    \n                \n                throw new Exception(error.toString());\n            }\n        });\n    }\n    \n    private configureStaticFileServing(): void\n    {\n        for (let path of this._staticFilePaths)\n            this._koa.use(serve(path));\n    }\n    \n    private configureBodyParser(): void\n    {\n        this._koa.use(KoaBodyParser({strict: true}));\n    }\n    \n    private configureRouting(): void\n    {\n        this._router.configureRouting(this._viewResolutionRoot);\n    }\n}"]}